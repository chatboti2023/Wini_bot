# libs
from aiogram import *
from aiogram.types import *
import data_base, random, asyncio, api

# functions
async def start_func(message):
    ReplyKeyboardRemove()

    start_message = f"""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!

–≠—Ç–æ –±–æ—Ç –≤–∑–∞–∏–º–æ–ø–æ–¥–ø–∏—Å–∫–∏. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç–Ω—ã–º, –Ω–æ –¥–ª—è –≤–∞—Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ 14 –¥–Ω–µ–π.

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 10 –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π
    """

    if data_base.id_list.count(message.from_user.id) == 0:
        buttons = ReplyKeyboardMarkup(resize_keyboard = True)

        profile_button = KeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
        help_button = KeyboardButton("–ü–æ–º–æ—â—å")
        buttons.add(profile_button, help_button)

        await message.answer(start_message, reply_markup = buttons)

        referal_code = random.randint(1000, 9999)
        referal_code = str(referal_code) + str(len(data_base.id_list))

        await data_base.started(message, referal_code)
            
        await message.answer(f"–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–Ω—ã–π –∫–æ–¥: {referal_code}")
    else:
        await message.answer("–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –∫ –Ω–∞–º –≤–µ—Ä–Ω—É–ª–∏—Å—å!")


async def home_func(message):
    buttons = ReplyKeyboardMarkup(resize_keyboard = True)

    profile_button = KeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    help_button = KeyboardButton("–ü–æ–º–æ—â—å")
    buttons.add(profile_button, help_button)

    await message.answer("–í—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ", reply_markup = buttons)


async def add_chanel_func(message):
    url = message.text[12:]

    if data_base.chanels_list.count(url) == 0:
        await data_base.add_chanel(url, message.from_user.id)

        for i in range(len(data_base.id_list)):
            await api.api_bot.send_message(data_base.id_list[i], f"–ù–æ–≤—ã–π –∫–∞–Ω–∞–ª: {url}")


async def add_city_func(message):
    city = message.text[6:]

    await data_base.update("users", "–ì–æ—Ä–æ–¥", "ID", city, message.from_user.id)


async def add_referal_func(message):
    code = message.text[9:]

    user_index = data_base.id_list.index(message.from_user.id)
    referal_user_index = data_base.users_ref_list.index(int(code))

    if data_base.users_ref_list.count(int(code)) != 0 and data_base.ref_list[user_index] == "–Ω–µ—Ç" and code != data_base.users_ref_list[user_index]:
        await data_base.update("users", "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π_—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π_–∫–æ–¥", "ID", code, message.from_user.id)
        await data_base.update("users", "–ë–∞–ª–∞–Ω—Å", "–í–∞—à_—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π_–∫–æ–¥", int(data_base.money_list[referal_user_index]) + 5, code)


async def get_profile_func(message):
    user_index = data_base.id_list.index(message.from_user.id)

    text = f"""
–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
ID - {data_base.id_list[user_index]}
–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ - {data_base.users_ref_list[user_index]}
–ì–æ—Ä–æ–¥ - {data_base.home_list[user_index]}
–ê–ª–º–∞–∑—ã - {data_base.money_list[user_index]}
    """

    await message.answer(text)


async def sub_func(message):
    text = f"""
    —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ :|
    """

    await message.answer(text)    


async def check_chanel_func(message):
    await message.answer("–≠—Ç–æ –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã:")
    
    await data_base.get_chanel(message.from_user.id)
    
    for i in range(len(data_base.chanels_to_bot)):
        await message.answer(data_base.chanels_to_bot[i][0])


async def help_func(message):
    text = f"""
—á—Ç–æ–±—ã –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –¥–æ–±–∞–≤—å—Ç–µ –≥–æ—Ä–æ–¥ –∏ –∫–∞–Ω–∞–ª—ã.

/chanel_<—Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª> - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª
/add_city_<–∏–º—è –≥–æ—Ä–æ–¥–∞/–Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ

–µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, —Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π

/referal_<–∫–æ–¥>
___
üÜò

–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å—É

avto-podpiska.ru (–ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ 
- –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ
- –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞
- –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∏ —Ç.–¥.
–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∞–º:
@alexmatorkin

–í–∞—à–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –±—ã—Å—Ç—Ä–µ–µ –µ—Å–ª–∏ –±—É–¥–µ—Ç –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å–∫—Ä–∏–Ω—ã –≤–∞—à–∏—Ö –ø—Ä–æ–±–ª–µ–º!
___
    """

    await message.answer(text)

async def profile_func(message):
    ReplyKeyboardRemove()
    
    buttons = ReplyKeyboardMarkup(resize_keyboard = True)
    me_button = KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
    chanel_button = KeyboardButton("–ö–∞–Ω–∞–ª—ã")
    sub_button = KeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∞")
    home_button = KeyboardButton("–î–æ–º–æ–π")
    
    buttons.add(me_button, chanel_button)
    buttons.add(sub_button)
    buttons.add(home_button)
    
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", reply_markup = buttons)